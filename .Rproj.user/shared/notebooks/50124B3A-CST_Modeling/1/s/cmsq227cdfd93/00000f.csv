"0","Ep <- array (0.00E00, dim = c(NX,NZ,ndet) ) #initialize scattered gamma-ray energy in a 3D array of image plane for each detector"
"0","Ep_chn <- array (0.00E00, dim = c(NX,NZ,ndet) ) #initialize scattered gamma-ray energy bin in a 3D array of image plane for each detector"
"0","Int_prob <- array (0.00E00, dim = c(NX,NZ,ndet) ) #initialize interaction probability in a 3D array of image plane for each detector in (b/Sr)"
"0","Events <- array (0.00E00, dim = c(NX,NZ,ndet) ) #initialize interaction probability in a 3D array of image plane for each detector in (b/Sr)"
"0",""
"0","for (i in 1:NX){"
"0","  for (j in 1:NZ){"
"0",""
"0","    "
"0","    if (Image_plane[i,j] > 0) {"
"0","      "
"0","      sp_dist <- sqrt(X$X[i]^2 + X$Z[j]^2) # distance from source to pixel in cm"
"0","      p_SA <- X$Z[j]*pwidth^2/sp_dist^3    # solid angle of pixel from source in Sr"
"0","      "
"0","      for (k in 1:ndet){"
"0",""
"0","        pd_dist <- sqrt((det_x[k]-X$X[i])^2 + X$Z[j]^2) # distance from pixel to detector in cm"
"0","        cos_theta <- (X$X[i]*(det_x[k]-X$X[i])-X$Z[j]^2) /                                                               (sp_dist*pd_dist) # cosines of angles between vector from source to"
"0","                                          #  pixel and pixel to detector for scatter angle"
"0","      "
"0","        Ep[i,j,k] <- E0/(1+(E0/moc2)*(1-cos_theta))"
"0","        Ep_chn[i,j,k] <- floor((Ep[i,j,k]-Emin)/chnwidth)+1"
"0","      "
"0","        d_SA <- pi*det_r^2*X$Z[j]/pd_dist^3  # solid angle of detector relative to pixel"
"0","        "
"0","        KN_xs <- (Al$Z*r02/2)*(Ep[i,j,k]/E0)^2*(Ep[i,j,k]/E0 + E0/Ep[i,j,k]                                         - (1-cos_theta^2)) # Klein-Nishina scattering cross section from"
"0","                                      # source through pixel into detector"
"0","        Int_prob[i,j,k] <- pwidth*Al$edens*KN_xs*1e-24*p_SA                                                                  *d_SA*sp_dist/(4*pi*X$Z[j]) # Scattering probability from"
"0","                                      # source through pixel into detector"
"0","        Events[i,j,k] <- Int_prob[i,j,k] * Em_rate*Count_time"
"0","      "
"0","      }"
"0","    }"
"0","  }"
"0","}"
