FBP_CNN_Net <- function(cnn, sino_for_reconstruction) {
sens_image <- bp_system_torch(torch$ones_like(sino_for_reconstruction), sys_mat, nxd, nrd, nphi)
forward <- function(sino_for_reconstruction) {
filtered_sino <- cnn(sino_for_reconstruction)
recon <- bp_system_torch(filtered_sino, sys_mat, nxd, nrd, nphi) / (sens_image + 1.0e-15)
recon <- prelu(recon)
fpsino <- fp_system_torch(recon, sys_mat, nxd, nrd, nphi)
return(list(recon, fpsino, filtered_sino))
}
return(list(forward = forward))
}
true_sinogram_torch <- s
FBP_CNN_Net <- function(cnn, sino_for_reconstruction) {
sens_image <- bp_system_torch(torch$ones_like(sino_for_reconstruction), sys_mat, nxd, nrd, nphi)
forward <- function(sino_for_reconstruction) {
filtered_sino <- cnn(sino_for_reconstruction)
recon <- bp_system_torch(filtered_sino, sys_mat, nxd, nrd, nphi) / (sens_image + 1.0e-15)
recon <- prelu(recon)
fpsino <- fp_system_torch(recon, sys_mat, nxd, nrd, nphi)
return(list(recon, fpsino, filtered_sino))
}
return(list(forward = forward))
}
fbpnet <- FBP_CNN_Net(cnn, true_sinogram_torch)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(torch)
library(luz)
library(tidymodels)
library(broom)
library(raster)
library(png)
nxd <- 64
disp_scale <- 5
nrd <- as.integer(nxd * 1.42)
nphi <- nrd
ref65 <- read.csv("raw_data/65ref.csv")
ref65 <- ref65 %>% as.data.frame()
ref65 <- ref65 %>% as.matrix()
ref65 <- ref65[2:65,2:65]
refimg <- ref65 %>% image()
reftorch <- torch_tensor(ref65)$unsqueeze(1)
reftorch <- reftorch$unsqueeze(1)
reftorch <- reftorch$float()
#yptest <- matrix(0, nxd, nphi)
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(2*nrd*nphi, 2*nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
yp_bin <- as.integer(yp+nrd/2);
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix)}
}
fp_system_torch <- function(image, sys_mat, nxd, nrd, nphi) {
fp <- torch_reshape(image, c(nxd*nxd,1));
fb <- torch_mm(sys_mat, fp);
return(torch_reshape(fb, c(nphi,nrd)));
}
bp_system_torch <- function(sino, sys_mat, nxd, nrd, nphi) {
return(torch_reshape(torch_mm(sys_mat.T, torch_reshape(sino, c(nrd*nphi,1))), c(nxd,nxd)))
}
s <- fp_system_torch(reftorch, t[1:8100,1:4096], nxd, nrd, nphi)
sino <- s$squeeze(1)
sino<- sino$squeeze(1)
true_sinogram_torch <- s
sino <- sino %>% as.matrix()
image(sino)
s <- fp_system_torch(reftorch, t, nxd, nrd, nphi)
s <- fp_system_torch(reftorch, t1[,1:4096], nxd, nrd, nphi)
s <- fp_system_torch(reftorch, t1[1:8100,1:4096], nxd, nrd, nphi)
64*64
s <- fp_system_torch(reftorch, t1[1:8100,1:4096], nxd, nrd, nphi)
bp_system_torch <- function(sino, sys_mat, nxd, nrd, nphi) {
return(torch_reshape(torch_mm(sys_mat.T, torch_reshape(sino, c(nrd*nphi,1))), c(nxd,nxd)))
}
s <- fp_system_torch(reftorch, t1[1:8100,1:4096], nxd, nrd, nphi)
t <- make_torch_system_matrix(nxd, nrd, nphi)
t
s <- fp_system_torch(reftorch, t1[1:8100,1:4096], nxd, nrd, nphi)
s <- fp_system_torch(reftorch, t[1:8100,1:4096], nxd, nrd, nphi)
sino <- s$squeeze(1)
sino<- sino$squeeze(1)
true_sinogram_torch <- s
sino <- sino %>% as.matrix()
image(sino)
#yptest <- matrix(0, nxd, nphi)
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(1.05*nrd*nphi, 1.05*nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
yp_bin <- as.integer(yp+nrd/2);
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix)}
}
fp_system_torch <- function(image, sys_mat, nxd, nrd, nphi) {
fp <- torch_reshape(image, c(nxd*nxd,1));
fb <- torch_mm(sys_mat, fp);
return(torch_reshape(fb, c(nphi,nrd)));
}
bp_system_torch <- function(sino, sys_mat, nxd, nrd, nphi) {
return(torch_reshape(torch_mm(sys_mat.T, torch_reshape(sino, c(nrd*nphi,1))), c(nxd,nxd)))
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
t
s <- fp_system_torch(reftorch, t[1:8100,1:4096], nxd, nrd, nphi)
sino <- s$squeeze(1)
sino<- sino$squeeze(1)
true_sinogram_torch <- s
sino <- sino %>% as.matrix()
image(sino)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath(".."))
ref65 <- read.csv("raw_data/65ref.csv")
ref65 <- ref65 %>% as.data.frame()
ref65 <- ref65 %>% as.matrix()
ref65 <- ref65[,2:66]
refimg <- ref65 %>% image()
dim(ref65)
ref65 <- read.csv("raw_data/65ref.csv")
ref65 <- ref65 %>% as.data.frame()
ref65 <- ref65 %>% as.matrix()
ref65 <- ref65[2:65,2:65]
refimg <- ref65 %>% image()
dim(ref65)
nphi
nrd
64*1.42
nrd <- ceiling(nxd * 1.42)
nrd
nxd <- 64
disp_scale <- 5
nrd <- ceiling(nxd * 1.42)
nphi <- nrd
ref65 <- read.csv("raw_data/65ref.csv")
ref65 <- ref65 %>% as.data.frame()
ref65 <- ref65 %>% as.matrix()
ref65 <- ref65[2:65,2:65]
refimg <- ref65 %>% image()
reftorch <- torch_tensor(ref65)$unsqueeze(1)
reftorch <- reftorch$unsqueeze(1)
reftorch <- reftorch$float()
#yptest <- matrix(0, nxd, nphi)
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
yp_bin <- as.integer(yp+nrd/2);
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix)}
}
fp_system_torch <- function(image, sys_mat, nxd, nrd, nphi) {
fp <- torch_reshape(image, c(nxd*nxd,1));
fb <- torch_mm(sys_mat, fp);
return(torch_reshape(fb, c(nphi,nrd)));
}
bp_system_torch <- function(sino, sys_mat, nxd, nrd, nphi) {
return(torch_reshape(torch_mm(sys_mat.T, torch_reshape(sino, c(nrd*nphi,1))), c(nxd,nxd)))
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
yp_bin
#yptest <- matrix(0, nxd, nphi)
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
yp_bin <- floor(yp+nrd/2);
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix)}
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
#yptest <- matrix(0, nxd, nphi)
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
yp_bin <- ceiling(yp+nrd/2);
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix)}
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
#yptest <- matrix(0, nxd, nphi)
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
yp_bin <- as.integer(yp+nrd/2);
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix)}
}
yp_count <- vector(0, 10000)
yp_count <- matrix(0, 0, 10000)
yp_count
yp_count <- integer(10000)
yp_count
count <- 0
#yptest <- matrix(0, nxd, nphi)
yp_count <- integer(10000)
bin_count <- integer(10000)
count <- 0
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
count <- count+1;
yp_count[count] <- yp;
yp_bin <- as.integer(yp+nrd/2);
bin_count[count]<- yp_bin
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix);
return(yp_count);
return(bin_count)
}
#yptest <- matrix(0, nxd, nphi)
yp_count <- integer(10000)
bin_count <- integer(10000)
count <- 0
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
count <- count+1;
yp_count[count] <- yp;
yp_bin <- as.integer(yp+nrd/2);
bin_count[count]<- yp_bin
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix);
return(yp_count);
return(bin_count);
}
#yptest <- matrix(0, nxd, nphi)
yp_count <- integer(10000)
bin_count <- integer(10000)
count <- 0
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
count <- count+1;
yp_count[count] <- yp;
yp_bin <- as.integer(yp+nrd/2);
bin_count[count]<- yp_bin;
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix);
return(yp_count);
return(bin_count);
}
#yptest <- matrix(0, nxd, nphi)
yp_count <- integer(10000)
bin_count <- integer(10000)
count <- 0
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
count <- count+1;
yp_count[count] <- yp;
yp_bin <- as.integer(yp+nrd/2);
bin_count[count]<- yp_bin;
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
return(system_matrix, yp_count, bin_count);
}
#yptest <- matrix(0, nxd, nphi)
yp_count <- integer(10000)
bin_count <- integer(10000)
count <- 0
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
count <- count+1;
yp_count[count] <- yp;
yp_bin <- as.integer(yp+nrd/2);
bin_count[count]<- yp_bin;
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
}
return(c(system_matrix, yp_count, bin_count));
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
yp_count
#yptest <- matrix(0, nxd, nphi)
yp_count <- integer(10000)
bin_count <- integer(10000)
count <- 0
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
for (xv in 1:nxd) {
for (yv in 1:nxd){
for (ph in 1:nphi){
yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
count <- count+1;
yp_count[count] <- yp;
yp_bin <- as.integer(yp+nrd/2);
bin_count[count]<- yp_bin;
system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
}
}
}
return(system_matrix, yp_count, bin_count);
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
yp_count
t <- torch_zeros(nrd*nphi, nxd*nxd)
t
s <- fp_system_torch(reftorch, t, nxd, nrd, nphi)
sino <- s$squeeze(1)
sino<- sino$squeeze(1)
true_sinogram_torch <- s
sino <- sino %>% as.matrix()
image(sino)
sino
#yptest <- matrix(0, nxd, nphi)
#yp_count <- integer(10000)
#bin_count <- integer(10000)
#count <- 0
#make_torch_system_matrix <- function(nxd, nrd, nphi) {
#system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
#for (xv in 1:nxd) {
#for (yv in 1:nxd){
#for (ph in 1:nphi){
# yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
# count <- count+1;
# yp_count[count] <- yp;
# yp_bin <- as.integer(yp+nrd/2);
# bin_count[count]<- yp_bin;
# system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
# }
# }
# }
#return(system_matrix, yp_count, bin_count);
# }
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch$zeros(nrd * nphi, nxd * nxd)
for (xv in 1:nxd) {
for (yv in 1:nxd) {
for (ph in 1:nphi) {
yp <- -(xv - (nxd * 0.5)) * sin(ph * pi / nphi) + (yv - (nxd * 0.5)) * cos(ph * pi / nphi)
yp_bin <- as.integer(yp + nrd / 2)
system_matrix[[yp_bin + ph * nrd, xv + yv * nxd]] <- 1.0
}
}
}
return(system_matrix)
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(torch)
library(luz)
library(tidymodels)
library(broom)
library(raster)
library(png)
nxd <- 64
disp_scale <- 5
nrd <- ceiling(nxd * 1.42)
nphi <- nrd
ref65 <- read.csv("raw_data/65ref.csv")
ref65 <- ref65 %>% as.data.frame()
ref65 <- ref65 %>% as.matrix()
ref65 <- ref65[2:65,2:65]
refimg <- ref65 %>% image()
reftorch <- torch_tensor(ref65)$unsqueeze(1)
reftorch <- reftorch$unsqueeze(1)
reftorch <- reftorch$float()
#yptest <- matrix(0, nxd, nphi)
#yp_count <- integer(10000)
#bin_count <- integer(10000)
#count <- 0
#make_torch_system_matrix <- function(nxd, nrd, nphi) {
#system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
#for (xv in 1:nxd) {
#for (yv in 1:nxd){
#for (ph in 1:nphi){
# yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
# count <- count+1;
# yp_count[count] <- yp;
# yp_bin <- as.integer(yp+nrd/2);
# bin_count[count]<- yp_bin;
# system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
# }
# }
# }
#return(system_matrix, yp_count, bin_count);
# }
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch$zeros(nrd * nphi, nxd * nxd)
for (xv in 1:nxd) {
for (yv in 1:nxd) {
for (ph in 1:nphi) {
yp <- -(xv - (nxd * 0.5)) * sin(ph * pi / nphi) + (yv - (nxd * 0.5)) * cos(ph * pi / nphi)
yp_bin <- as.integer(yp + nrd / 2)
system_matrix[[yp_bin + ph * nrd, xv + yv * nxd]] <- 1.0
}
}
}
return(system_matrix)
}
fp_system_torch <- function(image, sys_mat, nxd, nrd, nphi) {
fp <- torch_reshape(image, c(nxd*nxd,1));
fb <- torch_mm(sys_mat, fp);
return(torch_reshape(fb, c(nphi,nrd)));
}
bp_system_torch <- function(sino, sys_mat, nxd, nrd, nphi) {
return(torch_reshape(torch_mm(sys_mat.T, torch_reshape(sino, c(nrd*nphi,1))), c(nxd,nxd)))
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
knitr::opts_chunk$set(echo = TRUE)
knitr::opts_knit$set(root.dir = normalizePath(".."))
library(torch)
library(luz)
library(tidymodels)
library(broom)
library(raster)
library(png)
nxd <- 64
disp_scale <- 5
nrd <- ceiling(nxd * 1.42)
nphi <- nrd
ref65 <- read.csv("raw_data/65ref.csv")
ref65 <- ref65 %>% as.data.frame()
ref65 <- ref65 %>% as.matrix()
ref65 <- ref65[2:65,2:65]
refimg <- ref65 %>% image()
reftorch <- torch_tensor(ref65)$unsqueeze(1)
reftorch <- reftorch$unsqueeze(1)
reftorch <- reftorch$float()
#yptest <- matrix(0, nxd, nphi)
#yp_count <- integer(10000)
#bin_count <- integer(10000)
#count <- 0
#make_torch_system_matrix <- function(nxd, nrd, nphi) {
#system_matrix <- torch_zeros(nrd*nphi, nxd*nxd);
#for (xv in 1:nxd) {
#for (yv in 1:nxd){
#for (ph in 1:nphi){
# yp <- -(xv-(nxd*0.5)) * sin(ph*pi/nphi)+(yv-(nxd*0.5)) * cos(ph*pi/nphi);
# count <- count+1;
# yp_count[count] <- yp;
# yp_bin <- as.integer(yp+nrd/2);
# bin_count[count]<- yp_bin;
# system_matrix[yp_bin + ph*nrd, xv + yv*nxd] = 1;
# }
# }
# }
#return(system_matrix, yp_count, bin_count);
# }
make_torch_system_matrix <- function(nxd, nrd, nphi) {
system_matrix <- torch$zeros(nrd * nphi, nxd * nxd)
for (xv in 1:nxd) {
for (yv in 1:nxd) {
for (ph in 1:nphi) {
yp <- -(xv - (nxd * 0.5)) * sin(ph * pi / nphi) + (yv - (nxd * 0.5)) * cos(ph * pi / nphi)
yp_bin <- as.integer(yp + nrd / 2)
system_matrix[[yp_bin + ph * nrd, xv + yv * nxd]] <- 1.0
}
}
}
return(system_matrix)
}
fp_system_torch <- function(image, sys_mat, nxd, nrd, nphi) {
fp <- torch_reshape(image, c(nxd*nxd,1));
fb <- torch_mm(sys_mat, fp);
return(torch_reshape(fb, c(nphi,nrd)));
}
bp_system_torch <- function(sino, sys_mat, nxd, nrd, nphi) {
return(torch_reshape(torch_mm(sys_mat.T, torch_reshape(sino, c(nrd*nphi,1))), c(nxd,nxd)))
}
t <- make_torch_system_matrix(nxd, nrd, nphi)
